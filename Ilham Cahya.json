{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"},"colab":{"name":"Final Assignment Partsol Ilham Cahya.ipynb","provenance":[]}},"cells":[{"cell_type":"code","metadata":{"id":"mVG_G99fVMfP"},"source":["import warnings\n","warnings.filterwarnings('ignore')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"wmcpbrkAVMfZ","outputId":"cf4831b5-ab7e-480c-f2ae-6570522c4c5b"},"source":["pip install lasio"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: lasio in c:\\programdata\\anaconda3\\lib\\site-packages (0.28)\n","Requirement already satisfied: numpy in c:\\programdata\\anaconda3\\lib\\site-packages (from lasio) (1.19.2)\n","Note: you may need to restart the kernel to use updated packages.\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"MoagMriYVMfb"},"source":["## Petrophysics calculation"]},{"cell_type":"code","metadata":{"id":"9-U3LUuMVMfc","outputId":"9c8a1609-55fe-4fd7-eaa3-ff2aa6ed997b"},"source":["import lasio\n","las=lasio.read('well-1.las') \n","\n","#convert the las file to pandas dataframe, this will automatically retain the logname and made the depth as index column\n","well=las.df()\n","print (well)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["         CALI       DT      GR    ILD   MSFL  NPHI_LS   RHOB\n","DEPTH                                                       \n","3001.0  9.984  148.500  80.875  0.722  0.991  0.43701  2.170\n","3001.5  9.938  148.625  80.875  0.718  1.026  0.47705  2.176\n","3002.0  9.914  146.125  80.625  0.714  0.990  0.45947  2.166\n","3002.5  9.859  145.375  82.625  0.715  0.953  0.47754  2.158\n","3003.0  9.914  145.125  81.938  0.709  0.900  0.45508  2.156\n","...       ...      ...     ...    ...    ...      ...    ...\n","4458.0  8.484  109.000  79.812  1.122  1.744  0.33252  2.316\n","4458.5  8.469  109.438  82.312  1.112  1.972  0.34082  2.326\n","4459.0  8.484  109.562  77.188  1.092  1.959  0.35693  2.316\n","4459.5  8.461  110.750  75.250  1.079  1.746  0.37256  2.311\n","4460.0  8.469  110.938  75.188  1.067  1.625  0.36768  2.307\n","\n","[2919 rows x 7 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UnEMrELWVMfd","outputId":"97360c4a-4550-4f7b-bb37-e9f39ea8d1e1"},"source":["KujungFM=well.loc[3337.79:3751.5]\n","print (KujungFM)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["         CALI       DT      GR    ILD   MSFL  NPHI_LS   RHOB\n","DEPTH                                                       \n","3338.0  8.617  123.625  88.812  1.006  1.292  0.48193  2.264\n","3338.5  8.562  116.875  79.500  1.182  1.258  0.46924  2.320\n","3339.0  8.594  100.000  68.562  1.417  1.250  0.37354  2.408\n","3339.5  8.492   83.938  51.500  1.742  1.430  0.21143  2.562\n","3340.0  8.297   65.750  33.844  2.174  7.311  0.13428  2.668\n","...       ...      ...     ...    ...    ...      ...    ...\n","3749.5  8.555  130.625  85.000  0.773  0.873  0.43115  2.184\n","3750.0  8.648  130.875  87.500  0.772  0.891  0.43164  2.170\n","3750.5  8.680  130.875  86.250  0.775  1.158  0.44092  2.178\n","3751.0  8.727  129.375  89.188  0.773  1.072  0.42285  2.184\n","3751.5  8.633  129.500  89.688  0.772  1.035  0.40430  2.191\n","\n","[828 rows x 7 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Sh-6kbAJVMfd"},"source":["#this code is adapted from andy mcdonald\n","\n","def shale_volume(gamma_ray, gamma_ray_max, gamma_ray_min): #specify the arguments\n","    vshale = (gamma_ray - gamma_ray_min) / (gamma_ray_max - gamma_ray_min) #use the argument to the equation using math operators\n","    return round(vshale, 4)\n","\n","def density_porosity(input_density, matrix_density, fluid_density):\n","    denpor = (matrix_density - input_density) / (matrix_density - fluid_density)\n","    return round(denpor, 4)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S6Blz5OiVMfe","outputId":"e5dae2b1-6a57-44fe-c638-2d452b0a9841"},"source":["mDens= 2.65\n","fDens= 1\n","KujungFM['VSHALE']=shale_volume(KujungFM['GR'], KujungFM['GR'].quantile(q=0.99),\n","                             KujungFM['GR'].quantile(q=0.01))\n","KujungFM['PHI']=density_porosity(KujungFM['RHOB'], mDens, fDens)\n","KujungFM.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CALI</th>\n","      <th>DT</th>\n","      <th>GR</th>\n","      <th>ILD</th>\n","      <th>MSFL</th>\n","      <th>NPHI_LS</th>\n","      <th>RHOB</th>\n","      <th>VSHALE</th>\n","      <th>PHI</th>\n","    </tr>\n","    <tr>\n","      <th>DEPTH</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3338.0</th>\n","      <td>8.617</td>\n","      <td>123.625</td>\n","      <td>88.812</td>\n","      <td>1.006</td>\n","      <td>1.292</td>\n","      <td>0.48193</td>\n","      <td>2.264</td>\n","      <td>0.8678</td>\n","      <td>0.2339</td>\n","    </tr>\n","    <tr>\n","      <th>3338.5</th>\n","      <td>8.562</td>\n","      <td>116.875</td>\n","      <td>79.500</td>\n","      <td>1.182</td>\n","      <td>1.258</td>\n","      <td>0.46924</td>\n","      <td>2.320</td>\n","      <td>0.7119</td>\n","      <td>0.2000</td>\n","    </tr>\n","    <tr>\n","      <th>3339.0</th>\n","      <td>8.594</td>\n","      <td>100.000</td>\n","      <td>68.562</td>\n","      <td>1.417</td>\n","      <td>1.250</td>\n","      <td>0.37354</td>\n","      <td>2.408</td>\n","      <td>0.5289</td>\n","      <td>0.1467</td>\n","    </tr>\n","    <tr>\n","      <th>3339.5</th>\n","      <td>8.492</td>\n","      <td>83.938</td>\n","      <td>51.500</td>\n","      <td>1.742</td>\n","      <td>1.430</td>\n","      <td>0.21143</td>\n","      <td>2.562</td>\n","      <td>0.2433</td>\n","      <td>0.0533</td>\n","    </tr>\n","    <tr>\n","      <th>3340.0</th>\n","      <td>8.297</td>\n","      <td>65.750</td>\n","      <td>33.844</td>\n","      <td>2.174</td>\n","      <td>7.311</td>\n","      <td>0.13428</td>\n","      <td>2.668</td>\n","      <td>-0.0522</td>\n","      <td>-0.0109</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         CALI       DT      GR    ILD   MSFL  NPHI_LS   RHOB  VSHALE     PHI\n","DEPTH                                                                       \n","3338.0  8.617  123.625  88.812  1.006  1.292  0.48193  2.264  0.8678  0.2339\n","3338.5  8.562  116.875  79.500  1.182  1.258  0.46924  2.320  0.7119  0.2000\n","3339.0  8.594  100.000  68.562  1.417  1.250  0.37354  2.408  0.5289  0.1467\n","3339.5  8.492   83.938  51.500  1.742  1.430  0.21143  2.562  0.2433  0.0533\n","3340.0  8.297   65.750  33.844  2.174  7.311  0.13428  2.668 -0.0522 -0.0109"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"UnYH5qx_VMff"},"source":["### Calculate RW and SW\n","\n","**Apparent water formation resistivity using Hingle method**\n","<img src=\"rw.png\">\n","\n","**SW:**\n","<img src=\"sw_archie.png\">"]},{"cell_type":"code","metadata":{"id":"e2I_aRpfVMff"},"source":["def rw_app(porosity, archieA, archieM, rt):\n","    rw= ((porosity**archieM)*(rt/archieA))\n","    return rw\n","\n","def sw_archie(porosity, rt, rw, archieA, archieM, archieN):\n","    sw = ((archieA / (porosity ** archieM)) * (rw/rt))**(1/archieN)\n","    return sw\n","\n","archieA= 1\n","archieM= 2\n","archieN= 2"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tVD7CgAiVMfg"},"source":["KujungFM['Rw']=rw_app(KujungFM['NPHI_LS'], archieA, archieM, KujungFM['ILD'])\n","KujungFM['SW']=sw_archie(KujungFM['NPHI_LS'], KujungFM['ILD'], KujungFM['Rw'], archieA, archieM, archieN)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dCsStk8PVMfg","outputId":"3c92a059-747a-4a2f-a3ac-648b19aea9e4"},"source":["KujungFM.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CALI</th>\n","      <th>DT</th>\n","      <th>GR</th>\n","      <th>ILD</th>\n","      <th>MSFL</th>\n","      <th>NPHI_LS</th>\n","      <th>RHOB</th>\n","      <th>VSHALE</th>\n","      <th>PHI</th>\n","      <th>Rw</th>\n","      <th>SW</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>828.000000</td>\n","      <td>8.280000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>8.588909</td>\n","      <td>118.736715</td>\n","      <td>76.343841</td>\n","      <td>1.109170</td>\n","      <td>1.743801</td>\n","      <td>0.381769</td>\n","      <td>2.225851</td>\n","      <td>0.659101</td>\n","      <td>0.257057</td>\n","      <td>0.154674</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.340040</td>\n","      <td>12.152890</td>\n","      <td>13.450552</td>\n","      <td>0.408286</td>\n","      <td>3.261412</td>\n","      <td>0.053883</td>\n","      <td>0.071534</td>\n","      <td>0.225129</td>\n","      <td>0.043354</td>\n","      <td>0.032237</td>\n","      <td>4.316309e-17</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>7.680000</td>\n","      <td>57.625000</td>\n","      <td>17.641000</td>\n","      <td>0.563000</td>\n","      <td>0.460000</td>\n","      <td>0.119630</td>\n","      <td>1.875000</td>\n","      <td>-0.323400</td>\n","      <td>-0.041800</td>\n","      <td>0.039200</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>8.344000</td>\n","      <td>110.531000</td>\n","      <td>69.188000</td>\n","      <td>0.864750</td>\n","      <td>1.119000</td>\n","      <td>0.349120</td>\n","      <td>2.188000</td>\n","      <td>0.539300</td>\n","      <td>0.238800</td>\n","      <td>0.133070</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>8.539000</td>\n","      <td>119.375000</td>\n","      <td>79.750000</td>\n","      <td>1.061000</td>\n","      <td>1.343500</td>\n","      <td>0.387700</td>\n","      <td>2.230000</td>\n","      <td>0.716100</td>\n","      <td>0.254500</td>\n","      <td>0.152117</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8.758000</td>\n","      <td>128.031250</td>\n","      <td>85.453500</td>\n","      <td>1.267250</td>\n","      <td>1.583000</td>\n","      <td>0.419920</td>\n","      <td>2.256000</td>\n","      <td>0.811575</td>\n","      <td>0.280000</td>\n","      <td>0.173003</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10.422000</td>\n","      <td>156.250000</td>\n","      <td>101.188000</td>\n","      <td>6.004000</td>\n","      <td>42.829000</td>\n","      <td>0.486330</td>\n","      <td>2.719000</td>\n","      <td>1.074900</td>\n","      <td>0.469700</td>\n","      <td>0.343277</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             CALI          DT          GR         ILD        MSFL     NPHI_LS  \\\n","count  828.000000  828.000000  828.000000  828.000000  828.000000  828.000000   \n","mean     8.588909  118.736715   76.343841    1.109170    1.743801    0.381769   \n","std      0.340040   12.152890   13.450552    0.408286    3.261412    0.053883   \n","min      7.680000   57.625000   17.641000    0.563000    0.460000    0.119630   \n","25%      8.344000  110.531000   69.188000    0.864750    1.119000    0.349120   \n","50%      8.539000  119.375000   79.750000    1.061000    1.343500    0.387700   \n","75%      8.758000  128.031250   85.453500    1.267250    1.583000    0.419920   \n","max     10.422000  156.250000  101.188000    6.004000   42.829000    0.486330   \n","\n","             RHOB      VSHALE         PHI          Rw            SW  \n","count  828.000000  828.000000  828.000000  828.000000  8.280000e+02  \n","mean     2.225851    0.659101    0.257057    0.154674  1.000000e+00  \n","std      0.071534    0.225129    0.043354    0.032237  4.316309e-17  \n","min      1.875000   -0.323400   -0.041800    0.039200  1.000000e+00  \n","25%      2.188000    0.539300    0.238800    0.133070  1.000000e+00  \n","50%      2.230000    0.716100    0.254500    0.152117  1.000000e+00  \n","75%      2.256000    0.811575    0.280000    0.173003  1.000000e+00  \n","max      2.719000    1.074900    0.469700    0.343277  1.000000e+00  "]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"fR2geL9JVMfh","outputId":"5d3636da-a280-45dc-ec4c-ca30a8d53c16"},"source":["KujungFM.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CALI</th>\n","      <th>DT</th>\n","      <th>GR</th>\n","      <th>ILD</th>\n","      <th>MSFL</th>\n","      <th>NPHI_LS</th>\n","      <th>RHOB</th>\n","      <th>VSHALE</th>\n","      <th>PHI</th>\n","      <th>Rw</th>\n","      <th>SW</th>\n","    </tr>\n","    <tr>\n","      <th>DEPTH</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3338.0</th>\n","      <td>8.617</td>\n","      <td>123.625</td>\n","      <td>88.812</td>\n","      <td>1.006</td>\n","      <td>1.292</td>\n","      <td>0.48193</td>\n","      <td>2.264</td>\n","      <td>0.8678</td>\n","      <td>0.2339</td>\n","      <td>0.233650</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3338.5</th>\n","      <td>8.562</td>\n","      <td>116.875</td>\n","      <td>79.500</td>\n","      <td>1.182</td>\n","      <td>1.258</td>\n","      <td>0.46924</td>\n","      <td>2.320</td>\n","      <td>0.7119</td>\n","      <td>0.2000</td>\n","      <td>0.260260</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3339.0</th>\n","      <td>8.594</td>\n","      <td>100.000</td>\n","      <td>68.562</td>\n","      <td>1.417</td>\n","      <td>1.250</td>\n","      <td>0.37354</td>\n","      <td>2.408</td>\n","      <td>0.5289</td>\n","      <td>0.1467</td>\n","      <td>0.197717</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3339.5</th>\n","      <td>8.492</td>\n","      <td>83.938</td>\n","      <td>51.500</td>\n","      <td>1.742</td>\n","      <td>1.430</td>\n","      <td>0.21143</td>\n","      <td>2.562</td>\n","      <td>0.2433</td>\n","      <td>0.0533</td>\n","      <td>0.077872</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3340.0</th>\n","      <td>8.297</td>\n","      <td>65.750</td>\n","      <td>33.844</td>\n","      <td>2.174</td>\n","      <td>7.311</td>\n","      <td>0.13428</td>\n","      <td>2.668</td>\n","      <td>-0.0522</td>\n","      <td>-0.0109</td>\n","      <td>0.039200</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         CALI       DT      GR    ILD   MSFL  NPHI_LS   RHOB  VSHALE     PHI  \\\n","DEPTH                                                                          \n","3338.0  8.617  123.625  88.812  1.006  1.292  0.48193  2.264  0.8678  0.2339   \n","3338.5  8.562  116.875  79.500  1.182  1.258  0.46924  2.320  0.7119  0.2000   \n","3339.0  8.594  100.000  68.562  1.417  1.250  0.37354  2.408  0.5289  0.1467   \n","3339.5  8.492   83.938  51.500  1.742  1.430  0.21143  2.562  0.2433  0.0533   \n","3340.0  8.297   65.750  33.844  2.174  7.311  0.13428  2.668 -0.0522 -0.0109   \n","\n","              Rw   SW  \n","DEPTH                  \n","3338.0  0.233650  1.0  \n","3338.5  0.260260  1.0  \n","3339.0  0.197717  1.0  \n","3339.5  0.077872  1.0  \n","3340.0  0.039200  1.0  "]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"mDyPQn3EVMfh"},"source":["las.set_data(KujungFM)\n","las.write(\"KujungAssignment.las\", version=2.0)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bl6h5-WQVMfi"},"source":["## Data Handling"]},{"cell_type":"markdown","metadata":{"id":"EpACAEKjVMfi"},"source":["- ***explore the statistical information of the SW and RW log***\n","- ***compare the mean and the standard deviation of each log from the pandas result***\n","- ***visualize using histogram, boxplot, etc***"]},{"cell_type":"code","metadata":{"id":"hGyV9To5VMfi"},"source":["import pandas as pd\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","df = KujungFM[['Rw', 'SW']]\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zPlfNEqtVMfj","outputId":"ef88b4a0-dedc-470b-d0e6-ed9bb95b813c"},"source":["print ('mean for Rw and SW : \\n' + str(df.mean())+'\\n')\n","print ('variance for Rw and SW: \\n' + str(df.var())+'\\n')\n","print ('standard deviation Rw and SW: \\n' + str(df.std()))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["mean for Rw and SW : \n","Rw    0.154674\n","SW    1.000000\n","dtype: float64\n","\n","variance for Rw and SW: \n","Rw    1.039209e-03\n","SW    1.863052e-33\n","dtype: float64\n","\n","standard deviation Rw and SW: \n","Rw    3.223677e-02\n","SW    4.316309e-17\n","dtype: float64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"FFwAJ5AXVMfj","outputId":"702a5418-f508-4326-9647-ada46c7ac2c3"},"source":["print(df.describe())"],"execution_count":null,"outputs":[{"output_type":"stream","text":["               Rw            SW\n","count  828.000000  8.280000e+02\n","mean     0.154674  1.000000e+00\n","std      0.032237  4.316309e-17\n","min      0.039200  1.000000e+00\n","25%      0.133070  1.000000e+00\n","50%      0.152117  1.000000e+00\n","75%      0.173003  1.000000e+00\n","max      0.343277  1.000000e+00\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"w2sPJqUiVMfk"},"source":["import matplotlib.pyplot as plt\n","\n","import seaborn as sns"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HQLzSX5hVMfk","outputId":"f110d899-a499-459c-f7ca-0db55ff87d65"},"source":["sns.boxplot(df['Rw'])\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"ZK0toRV_VMfk","outputId":"094ab16d-3828-4a13-ce5b-c7e5457b341e"},"source":["sns.boxplot(df['SW'])\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"sZ_Jyha8VMfl","outputId":"201890ec-84f8-4bdd-b8c1-937f0c71c2b7"},"source":["sns.distplot(df['Rw'], bins=5)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"NUbrz7wsVMfl","outputId":"ee5b0b03-7022-4a48-b7b5-a909e2b5c1d8"},"source":["sns.distplot(df['SW'], bins=3)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}